version: '3.2'

services:

#-------------------------------------------
# BASE
#-------------------------------------------
  base:
    build:
      context: ./centos-base
    volumes:
      - /etc/localtime:/etc/localtime:ro
    #environment:
      #- CONTAINER_HOST=                                   # container host (defaut: hostname of the container)
      #- CONTAINER_RESOLVER=route                          # IP resolver method for container (disable/route/interface, default: route)
      #- CONTAINER_RESOLVER_INTERFACENAME=eth0             # network interface name for IP resolver (default: eth0)
      #- CONTAINER_RESOLVER_INTERFACETYPE=inet             # network interface type for IP resolver (inet/inet6, default: inet)

#-------------------------------------------
# BASE-CONSUL
#-------------------------------------------
  base-consul:
    build:
      context: ./centos-base-consul
    ports:
      - "1234:1234"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - CONSUL_AGENT=172.16.0.1                            # agent hostname
      - CONSUL_PORT=8500                                   # agent port
      - CONSUL_TLS=0                                       # enable TLS
      - CONSUL_BASE_SERVICENAME=${CONSUL_BASE_SERVICENAME} # service name to register
      - CONSUL_BASE_SERVICEPORT=1234                       # service port
    networks:
      - backend

#-------------------------------------------
# CONSUL
#-------------------------------------------
  consul:
    build:
      context: ./centos-consul
    ports:
      - "${CONSUL_PORT}:8500"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      - CONSUL_VERSION=${CONSUL_VERSION}
      - CONSULTEMPLATE_VERSION=${CONSULTEMPLATE_VERSION}
      - CONSUL_OPTIONS=-server -bootstrap-expect 1 -client 0.0.0.0 -ui    # minimal server options
    networks:
      - backend

#-------------------------------------------
# MARIADB
#-------------------------------------------
  mariadb:
    depends_on:
      - consul
    build:
      context: ./mariadb
    ports:
      - "${MARIADB_PORT}:3306"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_SAVE}/mariadb:/var/lib/mysql                # volume for data
    environment:
      - CONSUL_MARIADB_AGENT=${CONSUL_MARIADB_AGENT}       # consul agent hostname/IP
      #- CONSUL_MARIADB_PORT=8500                          # consul agent port
      #- CONSUL_MARIADB_KEYPREFIX=path/prefix/             # consul key prefix path
      - CONSUL_MARIADB_SERVICENAME=mariadb                 # consul service name
      - CONSUL_MARIADB_SERVICETAGS=dev                     # consul service tag
      - CONSUL_MARIADB_SERVICEPORT=3306                    # consul service port
      - CONSUL_MARIADB_CHECKTYPE=tcp                       # consul health check type
      #- MARIADB_PROFILE=my-small                          # default configuration profile to use (my-small, my-medium ...)
      - MARIADB_ROOTPASSWORD=${MARIADB_ROOTPASSWORD}       # root password
      #- MARIADB_ROOTHOSTMASK=${MARIADB_ROOTHOSTMASK}      # root user hostmask (optional)
      - MARIADB_DATABASE=${MARIADB_DATABASE}               # create database (optional)
      - MARIADB_USERNAME=${MARIADB_USERNAME}               # grant user name (optional)
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}               # grant user password (optional)
      - MARIADB_HOSTMASK=${MARIADB_HOSTMASK}               # grant user hostmask (optional)
      #- MARIADB_CONFIGSCRIPT=${MARIADB_CONFIGSCRIPT}      # custom configuration script
    networks:
      - backend

#-------------------------------------------
# MONGODB
#-------------------------------------------
  mongodb:
    depends_on:
      - consul
    build:
      context: ./mongodb
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_SAVE}/mongodb:/data/db                       # volume for data
    environment:
      - CONSUL_MONGODB_AGENT=${CONSUL_MONGODB_AGENT}       # consul agent hostname/IP
      #- CONSUL_MONGODB_PORT=8500                          # consul agent port
      #- CONSUL_MONGODB_KEYPREFIX=path/prefix/             # consul key prefix path
      - CONSUL_MONGODB_SERVICENAME=mongodb                 # consul service name
      - CONSUL_MONGODB_SERVICETAGS=dev                     # consul service tag
      - CONSUL_MONGODB_SERVICEPORT=27017                   # consul service port
      - CONSUL_MONGODB_CHECKTYPE=tcp                       # consul health check type
      #- MONGODB_PROFILE=my-small                          # default configuration profile to use (my-small, my-medium ...)
      #- MONGODB_CONFIGSCRIPT=${MONGODB_CONFIGSCRIPT}      # custom configuration script
    networks:
      - backend

#-------------------------------------------
# NGINX
#-------------------------------------------
  nginx:
    depends_on:
      - consul
    build:
      context: ./nginx
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_SSL_PORT}:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_SAVE}/nginx:/var/cache/nginx                          # volume for nginx cache
      - ${DATA_SAVE}/www:/var/www                                    # volume for data
    environment:
      - CONSUL_NGINX_AGENT=consul                                    # consul agent hostname/IP
      - CONSUL_NGINX_SERVICENAME=nginx                               # consul service name
      - CONSUL_NGINX_SERVICETAGS=dev                                 # consul service tag
      - CONSUL_NGINX_SERVICEPORT=${CONSUL_NGINX_SERVICEPORT}         # consul service port
      - CONSUL_NGINX_CHECKTYPE=tcp                                   # consul health check type
    networks:
      - frontend
      - backend

#-------------------------------------------------------------------
# POSTGRESQL
#-------------------------------------------------------------------
  postgresql:
    depends_on:
      - consul
    build:
      context: ./postgresql
    ports:
      - "${POSTGRESQL_PORT}:5432"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_SAVE}/postgres:/var/lib/postgresql                    # volume for data
    environment:
      - CONSUL_POSTGRES_AGENT=consul                                 # consul agent hostname/IP
      #- CONSUL_POSTGRES_PORT=8500                                   # consul agent port
      #- CONSUL_POSTGRES_KEYPREFIX=path/prefix/                      # consul key prefix path
      - CONSUL_POSTGRES_SERVICENAME=postgresql                       # consul service name
      - CONSUL_POSTGRES_SERVICETAGS=dev                              # consul service tag
      - CONSUL_POSTGRES_SERVICEPORT=${CONSUL_POSTGRES_SERVICEPORT}   # consul service port
      - CONSUL_POSTGRES_CHECKTYPE=tcp                                # consul health check type
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}                   # create database (optional)
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}                   # grant user name (optional)
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}                   # grant user password (optional)
      - POSTGRESQL_ADDRESS=${POSTGRESQL_ADDRESS}                     # grant user address (optional)
      #- POSTGRESQL_CONFIGSCRIPT=${POSTGRESQL_CONFIGSCRIPT}          # custom configuration script
    networks:
      - backend

#-------------------------------------------------------------------
# REDIS
#-------------------------------------------------------------------
  redis:
    depends_on:
      - consul
    build:
      context: ./redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_SAVE}/redis:/var/lib/redis                  # volume for data
    environment:
      - CONSUL_REDIS_AGENT=consul                          # consul agent hostname/IP
      #- CONSUL_REDIS_PORT=8500                            # consul agent port
      #- CONSUL_REDIS_KEYPREFIX=path/prefix/               # consul key prefix path
      - CONSUL_REDIS_SERVICENAME=redis                     # consul service name
      - CONSUL_REDIS_SERVICETAGS=dev                       # consul service tag
      - CONSUL_REDIS_SERVICEPORT=6379                      # consul service port
      - CONSUL_REDIS_CHECKTYPE=tcp                         # consul health check type
    networks:
      - backend

#-------------------------------------------------------------------
# APPLICATION
#-------------------------------------------------------------------
  application:
    depends_on:
      - consul
    build:
      context: ./centos-application
    ports:
      - "${APPLICATION_PORT}:22"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PATH_APPLICATION}:/home/docker/workspace
    environment:
      - SSH_AUTHORIZED_KEYS=${SSH_AUTHORIZED_KEYS}
      - SSH_USER=${SSH_USER}
      - SSH_USER_PASSWORD=${SSH_USER_PASSWORD}
      - SSH_USER_PASSWORD_HASHED=${SSH_USER_PASSWORD_HASHED}
      - SSH_ROOT_PASSWORD=${SSH_ROOT_PASSWORD}
      - CONSUL_APPLICATION_SERVICENAME=${CONSUL_APPLICATION_SERVICENAME}       # consul service name
      - CONSUL_APPLICATION_SERVICETAGS=${CONSUL_APPLICATION_SERVICETAGS}       # consul service tag
      - CONSUL_APPLICATION_SERVICEPORT=${CONSUL_APPLICATION_SERVICEPORT}       # consul service port
      - CONSUL_APPLICATION_CHECKTYPE=${CONSUL_APPLICATION_CHECKTYPE}           # consul health check type
    tty: true
    networks:
      - frontend
      - backend

#-------------------------------------------------------------------
# APPLICATION LITE EDITION
#-------------------------------------------------------------------
  application-lite:
    depends_on:
      - consul
    build:
      context: ./centos-application-lite
    ports:
      - "${APPLICATION_PORT}:22"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${PATH_APPLICATION}:/home/docker/workspace
    environment:
      - SSH_AUTHORIZED_KEYS=${SSH_AUTHORIZED_KEYS}
      - SSH_USER=${SSH_USER}
      - SSH_USER_PASSWORD=${SSH_USER_PASSWORD}
      - SSH_USER_PASSWORD_HASHED=${SSH_USER_PASSWORD_HASHED}
      - SSH_ROOT_PASSWORD=${SSH_ROOT_PASSWORD}
      - CONSUL_APPLICATION_SERVICENAME=${CONSUL_APPLICATION_SERVICENAME}                             # consul service name
      - CONSUL_APPLICATION_SERVICETAGS=${CONSUL_APPLICATION_SERVICETAGS}                             # consul service tag
      - CONSUL_APPLICATION_SERVICEPORT=${CONSUL_APPLICATION_SERVICEPORT}                             # consul service port
      - CONSUL_APPLICATION_CHECKTYPE=${CONSUL_APPLICATION_CHECKTYPE}                                 # consul health check type
    tty: true
    networks:
      - frontend
      - backend

#-------------------------------------------------------------------
# NETWORK SETUP
#-------------------------------------------------------------------
networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

#-------------------------------------------------------------------
# VOLUME SETUP
#-------------------------------------------------------------------
volumes:
  mariadb:
    driver: "local"
  mongodb:
    driver: "local"
  nginx:
    driver: "local"
  postgresql:
    driver: "local"
  redis:
    driver: "local"
  ruby:
    driver: "local"
  application:
    driver: "local"
  application-lite:
    driver: "local"